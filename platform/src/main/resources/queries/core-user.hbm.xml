<?xml version="1.0"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>

    <query name = "User.findByUsernameAndPassword">
        <![CDATA[
            FROM UserModel u
            WHERE u.username = :userName AND u.password = :password
        ]]>
    </query>

    <query name = "User.findByIdWithRoles">
        <![CDATA[
            FROM BaseUserModel u
                LEFT JOIN FETCH u.userRoles ur
            WHERE u.id = :id
        ]]>
    </query>

    <query name = "User.findByIdWithRegistryNodeAndGlobalRoles">
        <![CDATA[
            FROM BaseUserModel u
                JOIN FETCH u.registryNode rn
                LEFT JOIN FETCH u.userRoles ur
            WHERE u.id = :id AND ur.externalId IS NULL AND ur.internalId IS NULL
        ]]>
    </query>

    <query name = "User.findByRole">
        <![CDATA[
            FROM BaseUserModel u
                LEFT JOIN FETCH u.userRoles ur
            WHERE ur.id = :id
        ]]>
    </query>

    <query name = "User.findAllByRegistryNodeIdsWithRoles">
        <![CDATA[
			SELECT DISTINCT u
            FROM UserModel u
                JOIN FETCH u.registryNode rn
                LEFT JOIN FETCH u.userRoles ur
            WHERE rn.id IN (:registryNodeIds)
        ]]>
    </query>

    <query name = "User.findLastCreated">
        <![CDATA[
            FROM UserModel
            ORDER BY created DESC
        ]]>
    </query>

    <query name = "UserProfileField.findByRegistryNodeId">
        <![CDATA[
            FROM UserProfileFieldModel
            WHERE parent.id = :registryNodeId AND userProfileFieldGroup.id = :userProfileFieldGroupId
        ]]>
    </query>

    <query name = "UserProfileField.findByRegistryNodeIdAndGroupNull">
        <![CDATA[
            FROM UserProfileFieldModel
            WHERE parent.id = :registryNodeId AND userProfileFieldGroup IS NULL
        ]]>
    </query>

    <query name = "UserProfileField.findByRegistryNodeIdAndName">
        <![CDATA[
            FROM UserProfileFieldModel
            WHERE parent.id = :registryNodeId AND name = :name
        ]]>
    </query>

    <query name = "UserProfileFieldGroup.findByRegistryNodeId">
        <![CDATA[
            FROM UserProfileFieldGroupModel
            WHERE parent.id = :registryNodeId
        ]]>
    </query>

    <query name = "UserProfileFieldGroup.findByRegistryNodeIdAndName">
        <![CDATA[
            FROM UserProfileFieldGroupModel
            WHERE parent.id = :registryNodeId AND name = :name
        ]]>
    </query>

    <query name="UserRole.findAllByUserId">
	    <![CDATA[
            FROM UserRoleModel ur
            WHERE ur.user.id = :userId
        ]]>
    </query>

    <query name = "UserRole.findAllWithPermissionsByUserId">
	    <![CDATA[
            SELECT DISTINCT ur
            FROM UserRoleModel ur
                JOIN FETCH ur.role r
                    JOIN FETCH r.permissions p
            WHERE ur.user.id = :userId
        ]]>
    </query>

    <query name = "UserRole.findAllWithPermissionsByUserIdAndBaseLookup">
	    <![CDATA[
            SELECT DISTINCT ur
            FROM UserRoleModel ur
                JOIN FETCH ur.role r
                    JOIN FETCH r.permissions p
            WHERE ur.user.id = :userId and r.lookup like :lookupPattern 
        ]]>
    </query>

    <query name = "UserRole.findGlobalRolesByUserId">
	    <![CDATA[
            FROM UserRoleModel ur
            WHERE ur.user.id = :userId AND ur.externalId IS NULL AND ur.internalId IS NULL
        ]]>
    </query>

    <query name = "UserRole.findContextRolesByUserIdAndRegistryNodeId">
	    <![CDATA[
            FROM UserRoleModel ur
            WHERE ur.user.id = :userId AND ur.internalId = :objectId AND ur.type = :objectType
        ]]>
    </query>

    <query name = "UserRole.findContextRolesByUserIdAndRoleIdAndRegistryNodeId">
	    <![CDATA[
            FROM UserRoleModel ur
            WHERE ur.user.id = :userId AND ur.role.id = :roleId AND ur.internalId = :objectId AND ur.type = :objectType
        ]]>
    </query>
    <query name = "User.findAllWithRoles">
        <![CDATA[
            FROM BaseUserModel u
              INNER JOIN FETCH u.userRoles
        ]]>
    </query>

    <query name = "Directory.findAllOrdered">
	    <![CDATA[
            FROM DirectoryModel dir
            order by sortPosition
        ]]>
    </query>
</hibernate-mapping>