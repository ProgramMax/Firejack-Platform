/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

//@tag opf-model


Ext.define('OPF.console.domain.model.FieldModel', {
    extend: 'Ext.data.Model',

    statics: {
        pageSuffixUrl: 'console/domain',
        restSuffixUrl: 'registry/package',
        constraintName: 'OPF.registry.Field',

        fieldTypeIsString: function(value) {
            return 'UNIQUE_ID' == value || 'CODE' == value || 'LABEL' == value ||
                'LOOKUP' == value || 'NAME' == value || 'DESCRIPTION' == value ||
                'PASSWORD' == value || 'SECRET_KEY' == value || 'TINY_TEXT' == value ||
                'SHORT_TEXT' == value || 'MEDIUM_TEXT' == value || 'LONG_TEXT' == value ||
                'UNLIMITED_TEXT' == value || 'RICH_TEXT' == value || 'URL' == value ||
                'SSN' == value || 'PHONE_NUMBER' == value ||
                'FILE' == value || 'IMAGE_FILE' == value || 'AUDIO_FILE' == value ||
                'VIDEO_FILE' == value;
        },

        fieldTypeIsNumeric: function(value) {
            return 'NUMERIC_ID' == value || 'LARGE_NUMBER' == value ||
                'INTEGER_NUMBER' == value || 'CURRENCY' == value;
        },

        fieldTypeIsReal: function(value) {
            return 'DECIMAL_NUMBER' == value || 'CURRENCY' == value;
        },

        fieldTypeIsDate: function(value) {
            return 'DATE' == value || 'TIME' == value || 'EVENT_TIME' == value ||
                'CREATION_TIME' == value || 'UPDATE_TIME' == value;
        },

        fieldTypeIsBoolean: function(value) {
            return 'FLAG' == value;
        },

        checkType: function(value, type) {
            var validValue = null;
            if (OPF.isNotBlank(value)) {
                if (OPF.console.domain.model.FieldModel.fieldTypeIsNumeric(type)) {
                    validValue = Ext.isNumeric(value) ? parseInt(value) : null;
                } else if (OPF.console.domain.model.FieldModel.fieldTypeIsReal(type)) {
                    validValue = isFinite(value) ? value : null;
                } else if (OPF.console.domain.model.FieldModel.fieldTypeIsDate(type)) {
                    validValue = Ext.isDate(value) ? Ext.Date.parse(value) : null;
                } else if (OPF.console.domain.model.FieldModel.fieldTypeIsBoolean(type)) {
                    value = value.toLowerCase();
                    validValue = value == 'true';
                } else {
                    validValue = value;
                }
            }
            return validValue;
        }
    },

    fields: [
        { name: 'id', type: 'int', useNull: true },
        { name: 'inherited', type: 'boolean' },
        { name: 'autoGenerated', type: 'boolean' },
        { name: 'name', type: 'string' },
        { name: 'displayName', type: 'string' },
        { name: 'displayDescription', type: 'string' },
        { name: 'fieldType', type: 'string' },
        { name: 'fieldTypeName', type: 'string' },
        { name: 'customFieldType', type: 'string' },
        { name: 'required', type: 'boolean' },
        { name: 'searchable', type: 'boolean' },
        { name: 'defaultValue', type: 'string', useNull: true },
        { name: 'description', type: 'string', useNull: true },
        { name: 'allowedValues', useNull: true },

        { name: 'parentId', type: 'int' },

        { name: 'created', type: 'int' },
        { name: 'canUpdate', type: 'boolean'},
        { name: 'canDelete', type: 'boolean'}
    ],

    associations: [
        { type: 'belongsTo', model: 'OPF.console.directory.model.Directory', primaryKey: 'id', foreignKey: 'parentId' }
    ]

});